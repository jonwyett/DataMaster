!function(r){"use strict";function e(r){if(void 0!==r){if(null===r)return null;try{return JSON.parse(JSON.stringify(r))}catch(r){return{error:!0,message:"Failed to create deep copy: "+r.message}}}}function t(r){if(!Array.isArray(r))return{error:!0,message:"Input must be an array"};if(0===r.length)return{fields:[],table:[]};if("object"!=typeof r[0]||null===r[0])return{error:!0,message:"Array elements must be objects"};const e=Object.keys(r[0]),t=[];for(let s=0;s<r.length;s++){if("object"!=typeof r[s]||null===r[s])return{error:!0,message:"All array elements must be objects"};const a=[];for(let t=0;t<e.length;t++){const i=e[t];r[s].hasOwnProperty(i)?a.push(r[s][i]):a.push(null)}t.push(a)}return{fields:e,table:t}}function s(r,e){if(!Array.isArray(r))return{error:!0,message:"Table must be an array"};if(!Array.isArray(e))return{error:!0,message:"Fields must be an array"};if(0===r.length)return[];const t=[];for(let s=0;s<r.length;s++){if(!Array.isArray(r[s]))return{error:!0,message:"All table rows must be arrays"};const a={};for(let t=0;t<e.length;t++){if("string"!=typeof e[t])return{error:!0,message:"All field names must be strings"};a[e[t]]=void 0!==r[s][t]?r[s][t]:null}t.push(a)}return t}function a(r,e={}){if("string"!=typeof r)return{error:!0,message:"CSV input must be a string"};if(0===r.length)return{fields:[],table:[]};const t=e.isTSV||!1,s=e.headersInFirstRow||!1,a=t?"\t":",",i=e.noCR?"\n":"\r\n",n=[];let l="",o=[],h=!1,u=!1,f=0;function d(e){let t="";const s=e.length;for(let e=0;e<s;e++)t+=r[f+e];return e===t&&(f+=s,!0)}for(;f<r.length;)h?u?d('"'+a)?(o.push(l),l="",h=!1,u=!1):d('"'+i)?(o.push(l),l="",n.push(o),o=[],h=!1,u=!1):d('""')?l+='"':(l+=r[f],f++):d(a)?(o.push(l),l="",h=!1,u=!1):d(i)?(o.push(l),l="",n.push(o),o=[],h=!1,u=!1):d('""')?l+='"':(l+=r[f],f++):d('"')?(u=!0,h=!0):d(a)?(o.push(l),l="",h=!1,u=!1):d(i)?(n.push(o),o=[],l="",h=!1,u=!1):(l=r[f],h=!0,u=!1,f++);(l||o.length>0)&&(l&&o.push(l),o.length>0&&n.push(o));let c=[],y=n;if(s&&n.length>0){c=n[0],y=n.slice(1);for(let r=0;r<c.length;r++)null===c[r]||void 0===c[r]?c[r]="Field"+r:c[r]=c[r].toString()}else if(n.length>0)for(let r=0;r<n[0].length;r++)c.push(r.toString());return{fields:c,table:y}}function i(r,e,t={}){if(!Array.isArray(r))return{error:!0,message:"Table must be an array"};if(!Array.isArray(e))return{error:!0,message:"Fields must be an array"};const s=t.newLineString||"\r\n";function a(r){if(null==r)return'""';try{return((r=(r=r.toString()).replace(/"/g,'""')).includes(",")||r.includes("\n")||r.includes("\r")||r.includes('"'))&&(r='"'+r+'"'),r}catch(r){return'""'}}let i="";!1!==t.includeHeaders&&e.length>0&&(i+=e.map(a).join(",")+s);for(let e=0;e<r.length;e++){if(!Array.isArray(r[e]))return{error:!0,message:"All table rows must be arrays"};const t=[];for(let s=0;s<r[e].length;s++)t.push(a(r[e][s]));i+=t.join(",")+s}return i}function n(r,e){if(!Array.isArray(r))return!1;for(let t=0;t<r.length;t++)if(r[t]==e)return!0;return!1}function l(r,e,t=!1){if(!Array.isArray(r))return[];const s=[];try{for(let a=0;a<r.length;a++)!Array.isArray(r[a])||e>=r[a].length||t&&n(s,r[a][e])||s.push(r[a][e]);return s}catch(r){return[]}}function o(r,e,t){if(!Array.isArray(r)||!Array.isArray(e)||!Array.isArray(t))return!1;for(let s=0;s<e.length;s++){if(!Array.isArray(e[s]))continue;let a=!0;for(let i=0;i<t.length;i++){const n=t[i];if(e[s][n]!=r[n]){a=!1;break}}if(a)return!0}return!1}function h(r,e){if(!Array.isArray(r)||!Array.isArray(e))return{success:!1,indexes:[],error:"Invalid field names or fields array"};const t=[];for(let s=0;s<e.length;s++){let a;if("number"==typeof e[s]){if(e[s]<0||e[s]>=r.length)return{success:!1,indexes:[],error:`Field index ${e[s]} is out of bounds`};a=e[s]}else{if("string"!=typeof e[s])return{success:!1,indexes:[],error:"Field references must be strings or numbers"};if(a=r.indexOf(e[s]),-1===a)return{success:!1,indexes:[],error:`Field '${e[s]}' not found`}}t.push(a)}return{success:!0,indexes:t,error:null}}function u(r,e,t){if(!Array.isArray(r)||!Array.isArray(e)||!Array.isArray(t))return{success:!1,table:[],fields:[],error:"Invalid table, fields, or order parameters"};if(0===t.length)return{success:!1,table:[],fields:[],error:"Order array cannot be empty"};try{const s=h(e,t);if(!s.success)return{success:!1,table:[],fields:[],error:s.error};const a=s.indexes,i=[],n=[];for(let r=0;r<t.length;r++)"number"==typeof t[r]?n.push(e[t[r]]):n.push(t[r]);for(let e=0;e<r.length;e++){if(!Array.isArray(r[e]))continue;const t=[];for(let s=0;s<a.length;s++){const i=a[s];t.push(void 0!==r[e][i]?r[e][i]:null)}i.push(t)}return{success:!0,table:i,fields:n,error:null}}catch(r){return{success:!1,table:[],fields:[],error:"Failed to reorder data: "+r.message}}}function f(r,e,t=!1){if(null==r||null==e)return!1;r=String(r),e=String(e),t||(r=r.toLowerCase(),e=e.toLowerCase());let s="";for(let r=0;r<e.length;r++)"%"===e[r]?s+=".*":"_"===e[r]?s+=".":s+=e[r].replace(/[.*+?^${}()|[\]\\]/g,"\\$&");try{return new RegExp(`^${s}$`).test(r)}catch(r){return!1}}function d(r,e,t,s={}){if(!Array.isArray(r))return"false";if(!Array.isArray(e))return"false";if("string"!=typeof t)return"false";if(""===t.trim())return"false";const a=t.split(/(>=|<=|!=|=|>|<)/g);if(3!==a.length)return"false";const i=a[0].trim(),n=a[1].trim(),l=a[2].trim();if(![">=","<=","!=","=",">","<"].includes(n))return"false";let o;if(!(l.length>=2&&('"'===l.charAt(0)&&'"'===l.charAt(l.length-1)||"'"===l.charAt(0)&&"'"===l.charAt(l.length-1))))return"ERROR_UNQUOTED_VALUE";o=l.substring(1,l.length-1);const h=parseInt(i);if(isNaN(h)||h<0||h>=r.length)return"false";if(h>=e.length)return"false";const u=r[h];if(null==u)return""===o||"null"===o||"undefined"===o?"="===n?"true":"false":"!="===n?"true":"false";let d=!1;if("@"===o.charAt(0)){const t=o.substring(1);if(""===t.trim())d=!1;else{const a=function(r){const e=r.indexOf("("),t=r.lastIndexOf(")"),s=-1===e?r:r.substring(0,e);let a=[];if(-1!==e&&t>e){const s=r.substring(e+1,t).trim();if(s){const r=/(".*?"|'.*?'|[^,]+)/g;let e;for(;null!==(e=r.exec(s));){let r=e[0].trim();r.startsWith("'")&&r.endsWith("'")||r.startsWith('"')&&r.endsWith('"')?a.push(r.substring(1,r.length-1)):isNaN(r)||""===r?"true"===r?a.push(!0):"false"===r?a.push(!1):a.push(r):a.push(parseFloat(r))}}}return{name:s,params:a}}(t);if(a&&"string"==typeof a.name&&""!==a.name.trim()){const t=a.name,i=a.params;if(s&&"object"==typeof s)if("function"==typeof s[t])try{const a={value:r[h],field:e[h],params:i,row:e.reduce(((e,t,s)=>(e[t]=r[s],e)),{})},n=s[t](a);d=Boolean(n)}catch(r){console.error(`Error executing query function "${t}":`,r),d=!1}else d=f(r[h],o);else d=!1}else d=!1}"!="===n&&(d=!d)}else{if([">","<",">=","<="].includes(n)){const e=String(r[h]),t=parseFloat(e),s=parseFloat(o);if(isNaN(t)||isNaN(s))d=!1;else if(isFinite(t)&&isFinite(s))switch(n){case">":d=t>s;break;case"<":d=t<s;break;case">=":d=t>=s;break;case"<=":d=t<=s;break;default:d=!1}else d=!1}else try{d=f(r[h],o),"!="===n&&(d=!d)}catch(r){console.error("Error in comparison operation:",r),d=!1}}return d?"true":"false"}function c(r,e,t,s={}){const a=/\d+\s*(?:>=|<=|!=|=|>|<)\s*(?:"[^"]*"|'[^']*')/g;let i,n=t,l=t;const o=[];for(;null!==(i=a.exec(l));){const t=i[0],a=d(r,e,t,s);if(a.startsWith("ERROR_"))return a;o.push({expression:t,evaluatedValue:a})}const h=t.match(/\d+\s*(?:>=|<=|!=|=|>|<)\s*[^"'\s\(\)]+/g);if(h){const r=o.map((r=>r.expression)),e=h.filter((e=>!r.some((r=>r.includes(e)))));if(e.length>0)return"ERROR_UNQUOTED_VALUE"}for(const r of o)n=n.replace(r.expression,r.evaluatedValue);return n}function y(r){const e=r.split(" OR ");for(const r of e){const e=r.split(" AND ");let t=!0;for(const r of e)if("false"===r.trim()){t=!1;break}if(t)return!0}return!1}function _(r){for(;r.includes("(");){const e=r.indexOf(")");if(-1===e)break;const t=r.lastIndexOf("(",e);if(-1===t)break;const s=y(r.substring(t+1,e))?"true":"false";r=r.substring(0,t)+s+r.substring(e+1)}return y(r)?"true":"false"}class b{constructor(r,e,t={}){if(this._table=[],this._fields=[],this._options=this._validateOptions(t),Array.isArray(r)){let e=!0;for(let t=0;t<r.length;t++)if(!Array.isArray(r[t])){e=!1;break}e&&(this._table=r)}Array.isArray(e)&&(this._fields=e.map(((r,e)=>"string"==typeof r?r:null!=r?r.toString():"Field"+e)))}_validateOptions(r){"object"==typeof r&&null!==r||(r={});return{errorMode:["standard","strict","silent"].includes(r.errorMode)?r.errorMode:"standard",onError:"function"==typeof r.onError?r.onError:null}}_executeProgrammaticFilter(r){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return{success:!1,table:[],indices:[],error:"Invalid table or fields state"};if(null==r)return{success:!1,table:[],indices:[],error:"Filter parameter is required"};try{const e=[],t=[];if("function"==typeof r)for(let s=0;s<this._table.length;s++){if(!Array.isArray(this._table[s]))continue;const a=this._fields.reduce(((r,e,t)=>(r[e]=this._table[s][t],r)),{});try{r(a)&&(e.push([...this._table[s]]),t.push(s))}catch(r){continue}}else{if("object"!=typeof r||null===r)return{success:!1,table:[],indices:[],error:"Filter must be an object or function"};{const s=Object.keys(r);for(let a=0;a<this._table.length;a++){if(!Array.isArray(this._table[a]))continue;let i=!0;for(const e of s){const t=this._fields.indexOf(e);if(-1===t){i=!1;break}const s=this._table[a][t];if(!f(s,r[e])){i=!1;break}}i&&(e.push([...this._table[a]]),t.push(a))}}}return{success:!0,table:e,indices:t,error:null}}catch(r){return{success:!1,table:[],indices:[],error:"Failed to execute programmatic filter: "+r.message}}}_executeWhere(r,e={}){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return{success:!1,table:[],indices:[],error:"Invalid table or fields state"};if("string"!=typeof r)return{success:!1,table:[],indices:[],error:"Clause string must be a string"};if(0===r.length)return{success:!1,table:[],indices:[],error:"Clause string cannot be empty"};try{let t=function(r,e){return r.replace(/(OR|AND)\s*\*\s*(=|!=)\s*('[^']+'|"[^"]+")/g,((r,t,s,a)=>{const i=e.map((r=>`${r}${s}${a}`)),n="OR"===t.trim()?" OR ":" AND ";return` ${t} (`+i.join(n)+")"}))}(r,this._fields);const s=[],a=[];for(let r=0;r<this._fields.length;r++){const e=this._fields[r],s=new RegExp(`\\b${e}\\b(\\s*(?:>=|<=|!=|=|>|<))`,"g");t=t.replace(s,`${r}$1`)}for(let r=0;r<this._table.length;r++){if(!Array.isArray(this._table[r]))continue;const i=c(this._table[r],this._fields,t,e);if(i.startsWith("ERROR_")){let r="Query evaluation failed";return"ERROR_UNQUOTED_VALUE"===i&&(r="Query syntax error: Values must be quoted (e.g., field='value' not field=value)"),{success:!1,table:[],indices:[],error:r}}"true"===_(i)&&(s.push([...this._table[r]]),a.push(r))}return{success:!0,table:s,indices:a,error:null}}catch(r){return{success:!1,table:[],indices:[],error:"Failed to execute WHERE clause: "+r.message}}}_handleError(r,e="UserError",t="DataMaster"){const s={message:r,type:e,timestamp:(new Date).toISOString()};if(this._options.onError)try{this._options.onError(s)}catch(r){console.error("Error in onError callback:",r.message)}if(["InternalError","StateCorruption","LogicError","CriticalError","NullReference"].includes(e))throw new Error(`CRITICAL: ${r} (${e})`);switch(this._options.errorMode){case"strict":throw new Error(r);case"silent":return console.error(r),this._createErrorValueByType(e,r,t);default:return this._createErrorValueByType(e,r,t)}}_createErrorValueByType(r,e,t){switch(t){case"DataMaster":return new b([[r,e]],["ErrorType","Message"],this._options);case"Array":return[{ErrorType:r,Message:e}];case"String":return`"${r.replace(/"/g,'""')}","${e.replace(/"/g,'""')}"`;default:return null}}static fromRecordset(r,e={}){const s=new b([],[],e);if(!Array.isArray(r))return s._handleError("Input must be an array","UserError","DataMaster");const a=t(r);return a.error?s._handleError(a.message,"UserError","DataMaster"):new b(a.table,a.fields,e)}static fromTable(r,e={}){const t=new b([],[],e);if(!Array.isArray(r))return t._handleError("Input must be an array","UserError","DataMaster");let s=e.headers||[],a=r;if(e.headersInFirstRow&&r.length>0){if(!Array.isArray(r[0]))return t._handleError("First row must be an array when headersInFirstRow is true","UserError","DataMaster");s=r[0],a=r.slice(1)}else if(0===s.length&&r.length>0){if(!Array.isArray(r[0]))return t._handleError("First row must be an array","UserError","DataMaster");for(let e=0;e<r[0].length;e++)s.push(e.toString())}return new b(a,s,e)}static fromCsv(r,e={}){const t=new b([],[],e);if("string"!=typeof r)return t._handleError("Input must be a string","UserError","DataMaster");const s=a(r,e);return s.error?t._handleError(s.message,"UserError","DataMaster"):new b(s.table,s.fields,e)}static fromGenerator(r,e={}){const t=new b([],[],e);return"object"!=typeof r||null===r?t._handleError("Template must be an object","UserError","DataMaster"):t._handleError("Generator not yet implemented","NotImplemented","DataMaster")}toRecordset(){const r=s(this._table,this._fields);return r.error?this._handleError(r.message,"InternalError","Array"):r}toTable(r={}){"object"==typeof r&&null!==r||(r={});const t=e(this._table);if(t.error)return this._handleError(t.message,"InternalError","Array");if(r.includeHeaders){const r=e(this._fields);return r.error?this._handleError(r.message,"InternalError","Array"):[r,...t]}return t}toCsv(r={}){"object"==typeof r&&null!==r||(r={});const e=i(this._table,this._fields,r);return e.error?this._handleError(e.message,"InternalError","String"):e}length(){return Array.isArray(this._table)?this._table.length:this._handleError("Invalid table state","StateError","Primitive")}fields(){if(!Array.isArray(this._fields))return this._handleError("Invalid fields state","StateError","Array");const r=e(this._fields);return r.error?this._handleError(r.message,"InternalError","Array"):r}getColumn(r,t=!1){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","Array");if(0===this._table.length)return[];let s;if("number"==typeof r){if(r<0||r>=this._fields.length)return this._handleError("Column index out of bounds","UserError","Array");s=r}else{if("string"!=typeof r)return this._handleError("Column must be a string or number","UserError","Array");if(s=this._fields.indexOf(r),-1===s)return this._handleError(`Column '${r}' not found`,"UserError","Array")}const a=e(l(this._table,s,t));return a.error?this._handleError(a.message,"InternalError","Array"):a}getRow(r,e="array",t=null){let s="Array";switch(e.toLowerCase()){case"recordset":default:s="Array";break;case"object":case"recordtable":s="Primitive"}if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError",s);if(0===this._table.length)return this._handleError("Table is empty","UserError",s);let a=r;if(null!=t){const e="number"==typeof t?t:this._fields.indexOf(t);if(-1===e)return this._handleError(`ID field '${t}' not found`,"UserError",s);let i=!1;for(let t=0;t<this._table.length;t++)if(this._table[t]&&this._table[t][e]==r){a=t,i=!0;break}if(!i)return this._handleError(`Row with ID '${r}' not found`,"UserError",s)}else if("number"!=typeof r||r<0||r>=this._table.length)return this._handleError("Row index out of bounds","UserError",s);const i=function(r,e){if(!Array.isArray(r))return null;if(e<0||e>=r.length)return null;try{const t=r[e];return Array.isArray(t)?[...t]:null}catch(r){return null}}(this._table,a);if(null===i)return this._handleError("Failed to retrieve row data","InternalError",s);switch(e.toLowerCase()){case"array":return i;case"object":const r={};for(let e=0;e<this._fields.length&&e<i.length;e++)r[this._fields[e]]=i[e];return r;case"recordset":const t=[],a={};for(let r=0;r<this._fields.length&&r<i.length;r++)a[this._fields[r]]=i[r];return t.push(a),t;case"recordtable":return{fields:[...this._fields],table:[i]};default:return this._handleError(`Unknown return style '${e}'`,"UserError",s)}}getCell(r,e){if("number"!=typeof r||r<0||r>=this._table.length)return this._handleError("Row index out of bounds","UserError","Primitive");let t;if("number"==typeof e){if(e<0||e>=this._fields.length)return this._handleError("Column index out of bounds","UserError","Primitive");t=e}else{if("string"!=typeof e)return this._handleError("Column must be a string or number","UserError","Primitive");if(t=this._fields.indexOf(e),-1===t)return this._handleError(`Column '${e}' not found`,"UserError","Primitive")}return Array.isArray(this._table[r])?this._table[r][t]:this._handleError("Invalid row structure","InternalError","Primitive")}clone(){const r=e(this._table);if(r.error)return this._handleError(r.message,"InternalError","DataMaster");const t=e(this._fields);return t.error?this._handleError(t.message,"InternalError","DataMaster"):new b(r,t,this._options)}debug(r=!1){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","String");const e=r?"\r\n":"<br>",t=r?" ":"&nbsp;";function s(r,e){if("number"==typeof r&&(r=r.toString()),"string"!=typeof r)r=new Array(e+1).join(t);else if(r.length<e)for(let s=r.length;s<e;s++)r+=t;return r}const a=[];let i="";for(let r=0;r<this._fields.length;r++)a[r]=this._fields[r].length;for(let r=0;r<this._table.length;r++)for(let e=0;e<this._fields.length;e++)i=this._table[r][e],!0===i?i="true":!1===i?i="false":null===i?i="null":void 0===i&&(i="undefined"),i.toString().length>a[e]&&(a[e]=i.toString().length);let n=e;n+="--|";for(let r=0;r<this._fields.length;r++)n+=s(this._fields[r],a[r])+"|";n+=e;for(let r=0;r<this._table.length;r++){n+=r+(r<10?" |":"|");for(let e=0;e<this._table[r].length;e++)i=this._table[r][e],!0===i?i="true":!1===i?i="false":null===i?i="null":void 0===i&&(i="undefined"),n+=s(i,a[e])+"|";n+=e}return n}print(r=!1){return this.debug(r)}pivot(){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(0===this._table.length)return this._handleError("Cannot pivot empty table","UserError","DataMaster");if(this._fields.length<2)return this._handleError("Cannot pivot table with less than 2 columns","UserError","DataMaster");try{const r={table:[],fields:[]};for(let e=0;e<this._fields.length-1;e++){const e=[];for(let r=0;r<this._table.length+1;r++)e.push(null);r.table.push(e)}r.fields=l(this._table,0),r.fields.unshift(this._fields[0]);for(let e=0;e<this._fields.length-1;e++)r.table[e][0]=this._fields[e+1];for(let e=0;e<this._fields.length-1;e++)for(let t=0;t<this._table.length;t++)this._table[t]&&void 0!==this._table[t][e+1]&&(r.table[e][t+1]=this._table[t][e+1]);return this._table=r.table,this._fields=r.fields,this}catch(r){return this._handleError("Pivot operation failed: "+r.message,"InternalError","DataMaster")}}addRow(r,e){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");let t;void 0===r&&(r=[]);try{if(Array.isArray(r)){if(t=[...r],t.length>this._fields.length)t=t.slice(0,this._fields.length);else if(t.length<this._fields.length)for(let r=t.length;r<this._fields.length;r++)t.push(null)}else{t=new Array(this._fields.length);for(let r=0;r<t.length;r++)t[r]=null;"object"==typeof r&&null!==r&&Object.keys(r).forEach((e=>{const s=this._fields.indexOf(e);-1!==s&&(t[s]=r[e])}))}"number"==typeof e?(e<0&&(e=0),e>this._table.length&&(e=this._table.length),this._table.splice(e,0,t)):this._table.push(t)}catch(r){return this._handleError("Failed to add row: "+r.message,"InternalError","DataMaster")}return this}removeRow(r){if(!Array.isArray(this._table))return this._handleError("Invalid table state","StateError","DataMaster");if("number"!=typeof r)return this._handleError("Row index must be a number","UserError","DataMaster");if(r<0||r>=this._table.length)return this._handleError("Row index out of bounds","UserError","DataMaster");try{this._table.splice(r,1)}catch(r){return this._handleError("Failed to remove row: "+r.message,"InternalError","DataMaster")}return this}addColumn(r,e,t){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("string"!=typeof r)return this._handleError("Column name must be a string","UserError","DataMaster");if(void 0===e&&(e=[]),!Array.isArray(e))return this._handleError("Column data must be an array","UserError","DataMaster");try{const s=e.slice(0,this._table.length);if(s.length<this._table.length)for(let r=s.length;r<this._table.length;r++)s.push(null);if(void 0!==t){let e;if("number"==typeof t)e=t;else{if("string"!=typeof t)return this._handleError("Location must be a string or number","UserError","DataMaster");if(e=this._fields.indexOf(t),-1===e)return this._handleError(`Location field '${t}' not found`,"UserError","DataMaster")}e<0&&(e=0),e>this._fields.length&&(e=this._fields.length),this._fields.splice(e,0,r);for(let r=0;r<this._table.length;r++)this._table[r].splice(e,0,s[r])}else{this._fields.push(r);for(let r=0;r<this._table.length;r++)this._table[r].push(s[r])}}catch(r){return this._handleError("Failed to add column: "+r.message,"InternalError","DataMaster")}return this}removeColumn(r){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");let e;if("number"==typeof r){if(r<0||r>=this._fields.length)return this._handleError("Column index out of bounds","UserError","DataMaster");e=r}else{if("string"!=typeof r)return this._handleError("Column must be a string or number","UserError","DataMaster");if(e=this._fields.indexOf(r),-1===e)return this._handleError(`Column '${r}' not found`,"UserError","DataMaster")}try{this._fields.splice(e,1);for(let r=0;r<this._table.length;r++)this._table[r].splice(e,1)}catch(r){return this._handleError("Failed to remove column: "+r.message,"InternalError","DataMaster")}return this}modifyCell(r,e,t){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("number"!=typeof r)return this._handleError("Row index must be a number","UserError","DataMaster");if(r<0||r>=this._table.length)return this._handleError("Row index out of bounds","UserError","DataMaster");let s;if("number"==typeof e){if(e<0||e>=this._fields.length)return this._handleError("Column index out of bounds","UserError","DataMaster");s=e}else{if("string"!=typeof e)return this._handleError("Column must be a string or number","UserError","DataMaster");if(s=this._fields.indexOf(e),-1===s)return this._handleError(`Column '${e}' not found`,"UserError","DataMaster")}if(!Array.isArray(this._table[r]))return this._handleError("Invalid row structure","InternalError","DataMaster");try{this._table[r][s]=t}catch(r){return this._handleError("Failed to modify cell: "+r.message,"InternalError","DataMaster")}return this}formatColumn(r,e){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("function"!=typeof e)return this._handleError("Format function must be a function","UserError","DataMaster");let t;if("number"==typeof r){if(r<0||r>=this._fields.length)return this._handleError("Column index out of bounds","UserError","DataMaster");t=r}else{if("string"!=typeof r)return this._handleError("Column must be a string or number","UserError","DataMaster");if(t=this._fields.indexOf(r),-1===t)return this._handleError(`Column '${r}' not found`,"UserError","DataMaster")}try{for(let r=0;r<this._table.length;r++)if(Array.isArray(this._table[r]))try{this._table[r][t]=e(this._table[r][t])}catch(r){continue}}catch(r){return this._handleError("Failed to format column: "+r.message,"InternalError","DataMaster")}return this}formatRow(r,e){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("function"!=typeof e)return this._handleError("Format function must be a function","UserError","DataMaster");if("number"!=typeof r)return this._handleError("Row index must be a number","UserError","DataMaster");if(r<0||r>=this._table.length)return this._handleError("Row index out of bounds","UserError","DataMaster");if(!Array.isArray(this._table[r]))return this._handleError("Invalid row structure","InternalError","DataMaster");try{for(let t=0;t<this._table[r].length;t++)try{this._table[r][t]=e(this._table[r][t])}catch(r){continue}}catch(r){return this._handleError("Failed to format row: "+r.message,"InternalError","DataMaster")}return this}sort(r,e,t){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(this._table.length<=1)return this;if(void 0===r)return this._handleError("Fields parameter is required for sorting","UserError","DataMaster");let s=Array.isArray(r)?r:[r],a=Array.isArray(e)?e:[e||!1],i=Array.isArray(t)?t:[t];if(0===s.length)return this._handleError("At least one field must be specified for sorting","UserError","DataMaster");for(;a.length<s.length;)a.push(!1);if(t)for(;i.length<s.length;)i.push(null);else i=new Array(s.length).fill(null);try{const r=h(this._fields,s);if(!r.success)return this._handleError(r.error,"UserError","DataMaster");const e=function(r,e,t){return Array.isArray(r)&&Array.isArray(e)?function(s,a){if(!Array.isArray(s)||!Array.isArray(a))return 0;for(let i=0;i<r.length;i++){const n=r[i],l=e[i]||!1,o=t&&t[i],h=l?-1:1;let u=s[n],f=a[n];if("function"==typeof o)try{u=o(u),f=o(f)}catch(r){u=s[n],f=a[n]}if(null!=u||null!=f){if(null==u)return 1;if(null==f)return-1;if(u>f)return h;if(u<f)return-h}}return 0}:function(){return 0}}(r.indexes,a,i);this._table.sort(e)}catch(r){return this._handleError("Failed to sort table: "+r.message,"InternalError","DataMaster")}return this}sumColumns(r={}){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(0===this._table.length)return this._handleError("Cannot sum columns of empty table","UserError","DataMaster");if(0===this._fields.length)return this._handleError("Cannot sum columns without field definitions","UserError","DataMaster");try{const{label:e,columns:t,isAverage:s=!1,nanValue:a}=r;let i=t;if(!i){i=[];for(let r="string"==typeof e?1:0;r<this._fields.length;r++)i.push(r)}const n=h(this._fields,i);if(!n.success)return this._handleError(n.error,"UserError","DataMaster");const l=n.indexes,o=new Array(this._fields.length).fill(null),u=new Array(this._fields.length).fill(0);"string"==typeof e&&(o[0]=e);for(let r=0;r<l.length;r++){const e=l[r];let t=0,a=0;for(let r=0;r<this._table.length;r++){if(!Array.isArray(this._table[r]))continue;const s=this._table[r][e],i=parseFloat(s);!isNaN(i)&&isFinite(i)&&(t+=i,a++)}a>0?(o[e]=s?t/a:t,u[e]=a):o[e]=0}if(void 0!==a)for(let r=0;r<o.length;r++)"number"==typeof o[r]&&isNaN(o[r])&&(o[r]=a);this.addRow(o)}catch(r){return this._handleError("Failed to sum columns: "+r.message,"InternalError","DataMaster")}return this}sumRows(r={}){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(0===this._table.length)return this._handleError("Cannot sum rows of empty table","UserError","DataMaster");try{const{label:e="Total",rows:t,isAverage:s=!1,nanValue:a}=r;let i=t;if(!i){i=[];for(let r=0;r<this._table.length;r++)i.push(r)}for(let r=0;r<i.length;r++){const e=i[r];if("number"!=typeof e||e<0||e>=this._table.length)return this._handleError(`Row index ${e} is out of bounds`,"UserError","DataMaster")}const n=new Array(this._table.length).fill(null),l=new Array(this._table.length).fill(0);for(let r=0;r<i.length;r++){const e=i[r];if(!Array.isArray(this._table[e])){n[e]=null;continue}let t=0,a=0;for(let r=0;r<this._table[e].length;r++){const s=this._table[e][r],i=parseFloat(s);!isNaN(i)&&isFinite(i)&&(t+=i,a++)}a>0?(n[e]=s?t/a:t,l[e]=a):n[e]=0}if(void 0!==a)for(let r=0;r<n.length;r++)"number"==typeof n[r]&&isNaN(n[r])&&(n[r]=a);this.addColumn(e,n)}catch(r){return this._handleError("Failed to sum rows: "+r.message,"InternalError","DataMaster")}return this}reorder(r){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(!Array.isArray(r))return this._handleError("Fields parameter must be an array","UserError","DataMaster");if(0===r.length)return this._handleError("At least one field must be specified for reordering","UserError","DataMaster");try{const e=u(this._table,this._fields,r);if(!e.success)return this._handleError(e.error,"UserError","DataMaster");this._table=e.table,this._fields=e.fields}catch(r){return this._handleError("Failed to reorder data: "+r.message,"InternalError","DataMaster")}return this}modifyFieldNames(r,e=!1){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("object"!=typeof r||null===r||Array.isArray(r))return this._handleError("Field map must be an object","UserError","DataMaster");const t=Object.keys(r);if(0===t.length)return this._handleError("Field map cannot be empty","UserError","DataMaster");try{for(let r=0;r<t.length;r++){const e=t[r];if(-1===this._fields.indexOf(e))return this._handleError(`Field '${e}' not found`,"UserError","DataMaster")}for(let e=0;e<t.length;e++){const s=t[e],a=r[s];if("string"!=typeof a)return this._handleError(`New field name for '${s}' must be a string`,"UserError","DataMaster");const i=this._fields.indexOf(s);this._fields[i]=a}if(e){const e=t.map((e=>r[e])),s=u(this._table,this._fields,e);if(!s.success)return this._handleError(s.error,"InternalError","DataMaster");this._table=s.table,this._fields=s.fields}}catch(r){return this._handleError("Failed to modify field names: "+r.message,"InternalError","DataMaster")}return this}setFieldNames(r){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(!Array.isArray(r))return this._handleError("Fields must be an array","UserError","DataMaster");if(0===r.length)return this._handleError("Fields array cannot be empty","UserError","DataMaster");try{for(let e=0;e<r.length;e++)if("string"!=typeof r[e])return this._handleError(`Field name at index ${e} must be a string`,"UserError","DataMaster");const e=Math.min(r.length,this._fields.length);for(let t=0;t<e;t++)this._fields[t]=r[t]}catch(r){return this._handleError("Failed to set field names: "+r.message,"InternalError","DataMaster")}return this}replace(r,e,t){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(void 0===r)return this._handleError("Query parameter is required","UserError","DataMaster");if(void 0===e)return this._handleError("New value parameter is required","UserError","DataMaster");let s;if(void 0===t&&(t=this._fields),Array.isArray(t)||(t=[t]),r instanceof RegExp)s=r;else try{s=new RegExp(r.toString(),"ig")}catch(r){return this._handleError("Invalid query pattern: "+r.message,"UserError","DataMaster")}try{for(let r=0;r<t.length;r++){let a;if("number"==typeof t[r]){if(t[r]<0||t[r]>=this._fields.length)continue;a=t[r]}else{if("string"!=typeof t[r])continue;if(a=this._fields.indexOf(t[r]),-1===a)continue}for(let r=0;r<this._table.length;r++){if(!Array.isArray(this._table[r]))continue;let t=this._table[r][a];null==t&&(t="");try{this._table[r][a]=t.toString().replace(s,e)}catch(r){continue}}}}catch(r){return this._handleError("Failed to replace values: "+r.message,"InternalError","DataMaster")}return this}limit(r){try{const e=this._executeProgrammaticFilter(r);if(!e.success)return this._handleError(e.error,"UserError","DataMaster");this._table=e.table}catch(r){return this._handleError("Failed to limit data: "+r.message,"InternalError","DataMaster")}return this}limitWhere(r,e={}){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("string"!=typeof r)return this._handleError("Clause string must be a string","UserError","DataMaster");if(0===r.length)return this._handleError("Clause string cannot be empty","UserError","DataMaster");try{const t=this._executeWhere(r,e);if(!t.success)return this._handleError(t.error,"UserError","DataMaster");this._table=t.table}catch(r){return this._handleError("Failed to execute WHERE clause: "+r.message,"InternalError","DataMaster")}return this}removeDuplicates(r){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if(0===this._table.length)return this;if(void 0===r&&(r=[...this._fields]),Array.isArray(r)||(r=[r]),0===r.length)return this._handleError("At least one field must be specified for duplicate detection","UserError","DataMaster");try{const e=[];for(let t=0;t<r.length;t++){let s;if("number"==typeof r[t]){if(r[t]<0||r[t]>=this._fields.length)return this._handleError(`Field index ${r[t]} is out of bounds`,"UserError","DataMaster");s=r[t]}else{if("string"!=typeof r[t])return this._handleError("Field references must be strings or numbers","UserError","DataMaster");if(s=this._fields.indexOf(r[t]),-1===s)return this._handleError(`Field '${r[t]}' not found`,"UserError","DataMaster")}e.push(s)}const t=[];for(let r=0;r<this._table.length;r++)Array.isArray(this._table[r])&&(o(this._table[r],t,e)||t.push([...this._table[r]]));this._table=t}catch(r){return this._handleError("Failed to remove duplicates: "+r.message,"InternalError","DataMaster")}return this}search(r){try{const e=this._executeProgrammaticFilter(r);return e.success?new b(e.table,[...this._fields],this._options):this._handleError(e.error,"UserError","DataMaster")}catch(r){return this._handleError("Failed to search data: "+r.message,"InternalError","DataMaster")}}where(r,e={}){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","DataMaster");if("string"!=typeof r)return this._handleError("Clause string must be a string","UserError","DataMaster");if(0===r.length)return this._handleError("Clause string cannot be empty","UserError","DataMaster");try{const t=this._executeWhere(r,e);return t.success?new b(t.table,[...this._fields],this._options):this._handleError(t.error,"UserError","DataMaster")}catch(r){return this._handleError("Failed to execute WHERE clause: "+r.message,"InternalError","DataMaster")}}getIndices(r){try{const e=this._executeProgrammaticFilter(r);return e.success?e.indices:this._handleError(e.error,"UserError","Array")}catch(r){return this._handleError("Failed to get indices: "+r.message,"InternalError","Array")}}getIndicesWhere(r,e={}){if(!Array.isArray(this._table)||!Array.isArray(this._fields))return this._handleError("Invalid table or fields state","StateError","Array");if("string"!=typeof r)return this._handleError("Clause string must be a string","UserError","Array");if(0===r.length)return this._handleError("Clause string cannot be empty","UserError","Array");try{const t=this._executeWhere(r,e);return t.success?t.indices:this._handleError(t.error,"UserError","Array")}catch(r){return this._handleError("Failed to get indices with WHERE clause: "+r.message,"InternalError","Array")}}query(r,e={}){if("string"!=typeof r)return this._handleError("Query verb must be a string ('select', 'update', 'delete').","UserError","DataMaster");switch(r.toLowerCase()){case"select":return this._executeQuerySelect(e);case"update":return this._executeQueryUpdate(e);case"delete":return this._executeQueryDelete(e);default:return this._handleError(`Unsupported query verb: '${r}'.`,"UserError","DataMaster")}}_executeQuerySelect(r){const e=this.clone();if(r.where)if("string"==typeof r.where){const t=e.limitWhere(r.where,r.queryFunctions);if(t._fields.includes("ErrorType"))return t}else e.limit(r.where);if(r.orderBy){const t=function(r){if("string"!=typeof r)return"Error: Input must be a string";r=r.trim();const e=/^ORDER\s+BY\s+/i;e.test(r)&&(r=r.replace(e,""));const t=r.split(/\s*,\s*/),s=[],a=[];for(let r=0;r<t.length;r++){const e=t[r].trim();let i=!1,n=e;e.toUpperCase().endsWith(" DESC")?(i=!0,n=e.substring(0,e.length-5).trim()):e.toUpperCase().endsWith(" ASC")&&(n=e.substring(0,e.length-4).trim()),s.push(n),a.push(i)}return{fields:s,desc:a}}(r.orderBy);if("string"==typeof t)return this._handleError(t,"UserError","DataMaster");e.sort(t.fields,t.desc)}if(r.fields){let t=r.fields;"*"!==t&&("string"==typeof t&&(t=t.split(",").map((r=>r.trim()))),e.reorder(t))}if(void 0!==r.limit||void 0!==r.offset){const t=r.offset||0,s=r.limit;if("number"!=typeof t||t<0||!Number.isInteger(t))return this._handleError("Offset must be a non-negative integer","UserError","DataMaster");if(void 0!==s&&("number"!=typeof s||s<0||!Number.isInteger(s)))return this._handleError("Limit must be a non-negative integer","UserError","DataMaster");const a=e._table;let i;i=void 0!==s?a.slice(t,t+s):a.slice(t),e._table=i}return e}_executeQueryUpdate(r){if(!r.where)return this._handleError("UPDATE statements require a 'where' clause.","UserError","DataMaster");if(!r.set||"object"!=typeof r.set||Array.isArray(r.set))return this._handleError("UPDATE statements require a 'set' object.","UserError","DataMaster");let e;if(e="string"==typeof r.where?this.getIndicesWhere(r.where,r.queryFunctions):this.getIndices(r.where),Array.isArray(e)&&e.length>0&&"object"==typeof e[0]&&e[0].ErrorType)return this._handleError(e[0].Message,"UserError","DataMaster");const t=Object.keys(r.set);for(const s of e)for(const e of t)this.modifyCell(s,e,r.set[e]);return this}_executeQueryDelete(r){if(!r.where)return this._handleError("DELETE statements require a 'where' clause.","UserError","DataMaster");let e;if(e="string"==typeof r.where?this.getIndicesWhere(r.where,r.queryFunctions):this.getIndices(r.where),Array.isArray(e)&&e.length>0&&"object"==typeof e[0]&&e[0].ErrorType)return this._handleError(e[0].Message,"UserError","DataMaster");e.sort(((r,e)=>e-r));for(const r of e)this.removeRow(r);return this}}const E={recordsetToTable:t,tableToRecordset:s,csvToTable:a,tableToCsv:i};if("undefined"!=typeof module&&module.exports){const r=Object.assign(b,{fromTable:b.fromTable.bind(b),fromRecordset:b.fromRecordset.bind(b),fromCsv:b.fromCsv.bind(b),fromGenerator:b.fromGenerator.bind(b),converters:E});module.exports=r}else{const e=Object.assign(b,{fromTable:b.fromTable.bind(b),fromRecordset:b.fromRecordset.bind(b),fromCsv:b.fromCsv.bind(b),fromGenerator:b.fromGenerator.bind(b),converters:E});r.DataMaster=e}}(this||window);